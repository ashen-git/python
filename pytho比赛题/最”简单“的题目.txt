1.  循环输出1 - 100, 并计时花费了多少时间
{循环输出1-100 1分，计时花了多少时间 1分}

2.  数据输出一段内容随机的字符串（内容是所有大小写字母的随机字符）, 字符串长度由用户输入决定


3. 制作一个输出指定范围随机数的函数, 生成一个长度为100, 并内容随机的list

4. 在随机0到200的数值 长度为100的数组 中找出最大的数

5. 如果一个n位正整数等于其各位数字的n次方之和,则称该数为阿姆斯特朗数。 例如1^3 + 5^3 + 3^3 = 153。
    1000以内的阿姆斯特朗数： 1, 2, 3, 4, 5, 6, 7, 8, 9, 153, 370, 371, 407
    实现检测用户输入的数字是否为阿姆斯特朗数 
   3分

6. 新建一个文件, 并在文件中写入100行 20长度的随机字符串, 保存为 rand.txt
   2分

7.输入三个整数x,y,z，请把这三个数由小到大输出
1分

8.输出 9*9 乘法口诀表
2分

9. 读取文件中的成绩并输出成绩的等第到新文件
学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示
每行1个成绩
2分

10. 求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字
例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由用户输入控制
2分

11.字符串的连接，用户输入两个字符串，将他们组合后输出
世界这么大,(第一个输入) 想去(第二个输入)看看
1分

12. 整数序列求和，用户输入一个正整数N,计算从1到N(包含1和N)想加之后的结果
1分

13.请写出将字符串,列表, 元组翻转的方法

14. 请写出python中字典的keys()、values()、items()方法的区别
字典

1. 使用python 生成字典
  - 设置文件名为dicgen.py 1分*
  - 能从命令行获得参数 ./dicgen.py <最小长度> <最大长度> <所包含的字符串> <输出到的文件名>  2分*
  - 有完整的判断输入参数,并返回错误 3分
  - 能够生成字典 2分*
  - 使用optparse 2分
W
2. 使用python 爆破php网站的用户名与密码
  - 能指定用户名与密码的密码本 2分*
  - 使用optparse 来格式化参数 3分
W
3. 使用python 连接ftp服务器, 下载其内所有文件
    -  内下载所有文件  4分
    -  能下载所有文件包括文件夹中的文件  4分
 
   服务器需自行搭建, ftp服务器内文件数量不少于10个, 
   类型不少于2种

4. 使用python 暴力破解ftp用户名密码  3分

5. 使用python 执行linux指令并将回显保存到文件中, 使用optparse 模块指定参数, (需要执行的指令, 保存到那个文件夹)
    6分  未达到要求不计分

6. 使用 python 连接数据库 读取data.txt 中的数据插入到数据库中, 并查询user表中所有的字段并回显 10分
回显格式:
username  passsword create_time
A             C     2019-10-3 9:33:1

username,password,create_time
A,asdasd,2019-06-12 19:34:13
C,bbbbbbb,2020-06-12 19:30:13
DDDD,zzzzz,2018-01-10 19:34:13

	- 能使用python插入数据 4分
  	- 能使用python 把数据库中的数据回显  2分
	- 回显格式正确  2分
	-  题目达到全部要求  1分

7. 使用socket模块制作一个端口扫描器    5分
    - 可以定义端口扫描的范围  3分
    - 可以定义显示, 例: 只显示开放端口,  只显示关闭端口, 显示全部端口  2分

8. 使用socket模块, 发送与接收文件  4分

9. scapy, arp欺骗  5分

10. scapy, udp洪流  3分

11. scapy, ip范洪  3分

12. 使用python连接ftp服务器并下载文件  (能下载文件) 2分  (能下载所有文件) 5分
    服务自行搭建, 
    下载服务器中的所有文件
    服务器中需包含有*.txt, *.png, *.word, *.rar
    保证文件一致

13. 使用python 建立ssh 连接并执行ip a指令, 并保存到文件中  4分
    服务自行搭建

14. 使用python, 下载网站上的文件, 文件大于10Mb  4分
    服务自行搭建

15. 使用optparse 和 nmap 模块 制作端口扫描器  4分
   可以指定端口与扫描地址

16. 使用argparse 异或加密, 可以读取文件中的内容加密, 并保存到新的文件中([旧的文件名.bin])  5分
  文件大小不能小于2mb
  文件解密后必须保证一致 *

17. 本地执行指令, 执行cat /etc/passwd 指令并保存到文件中  5分

18. 使用自己生成的字典, 利用python进行ssh密码暴力破解  4分

1. 使用socket模块制作一个端口扫描器    5分
    - 可以定义端口扫描的范围  3分
    - 可以定义显示, 例: 只显示开放端口,  只显示关闭端口, 显示全部端口  2分

2.  制作一个猜数字游戏   3分
    -  生成数字的范围在0 - 1000
    -  通过用户的输出, 返回大了, 小了, 正确
    
3. 写一个异或加密程序 5分    5+1+1 = 7分
   - 可以用户定义密码 1分
   - 错误判断  1分
   - 只用加密全英文的文档  
   
6. 完成任意一种排序算法 5分(多做不算)
    - 冒泡排序
    - 选择排序
    - 希尔排序
    - 快速排序
    - (数组大小1000, 内数字随机)
   
7. 制作一个生成字典程序   2分    2+1+1+2+2 8分
  - 可以控制生成的位数 (0 - 6位)    1分
  - 可以控制生成的字符              1分
  - 可以控制生成的顺序              2分
  - 可以控制生成的大小              2分


arp 欺骗
xor

第一种
A B C
三台主机, A为攻击机
B 与 C 之间相互通信

A 需要欺骗 B C 主机, 我是对方需要通信的机器
A对B发送我是C的arp的包
A对C发送我是B的arp包


第二种
A B C
A为攻击机
B为客户机
C为网关

B与外界通信, A只需要告诉B我是网关, B的数据就会全部发向A
